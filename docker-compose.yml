# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:14
    container_name: lostpets_db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lostpets_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lostpets-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: lostpets_api
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database settings
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/lostpets_db
      - DATABASE_URL_LOCAL=postgresql://postgres:postgres@db:5432/lostpets_db
      - DOCKER_ENV=true

      # Security settings (изменить в продакшене!)
      - SECRET_KEY=your-secret-key-change-this-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30

      # AWS settings (опциональные - для хранения фото)
      # Если не указаны, фото будут сохраняться локально
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME:-lostpets-images}

      # Email settings (опциональные - для отправки писем)
      # Если не указаны, письма не будут отправляться
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@lostpets.com}

      # Other settings
      - SIMILARITY_THRESHOLD=0.35
      - VERIFICATION_CODE_EXPIRE_MINUTES=15
    networks:
      - lostpets-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  lostpets-network:
    driver: bridge

volumes:
  postgres_data: